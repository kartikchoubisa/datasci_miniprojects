# -*- coding: utf-8 -*-
"""samay.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NnlT7uHVWy7zF2kqQSvUKZEAPf7DLvrl
"""

# todo 
# plot upload date vs search popularity data on same graph
#more: use view count data somehow, cuz more viewcount on a video could mean more searches
#

# !pip install --upgrade google-api-python-client
key = 'AIzaSyAd4h6Ds02e2lWb2A-FA-FEujnhrDCRb6g'
channel_id = 'UCAov2BBv1ZJav0c_yHEciAw'

from apiclient.discovery import build
youtube = build('youtube', 'v3', developerKey = key)

channel = youtube.channels().list(id = channel_id, part = 'contentDetails').execute()
channel

uploads_id = channel['items'][0]['contentDetails']['relatedPlaylists']['uploads']
uploads_id



uploads1 = youtube.playlistItems().list(playlistId = uploads_id, part = 'snippet', maxResults = 50).execute()
uploads2 = youtube.playlistItems().list(playlistId = uploads_id, part = 'snippet', maxResults = 50, pageToken = 'CDIQAA').execute()
uploads3 = youtube.playlistItems().list(playlistId = uploads_id, part = 'snippet', maxResults = 50, pageToken = 'CGQQAA').execute()

import pandas as pd
import numpy as np
from pprint import pprint

# pprint(uploads3)
uploads = uploads1['items']+uploads2['items']+uploads3['items']

# print(len(uploads)) # 132
df = pd.DataFrame({'position': [e['snippet']['position'] for e in uploads],
                        'title': [e['snippet']['title'] for e in uploads],
                        'date' : [e['snippet']['publishedAt'] for e in uploads]})
# df = df.set_index('date')
df = df.set_index(pd.to_datetime(df['date'])).drop('date', axis = 1)
df.index = df.index.tz_convert('Asia/Kolkata')
df['Date'] = df.index.strftime('%d %b, %y')
# df = df.groupby([df.index.month.values, df.index.day.values]).count()
# df = df.groupby(pd.Grouper(freq = 'M')).count()
df['id'] = [e['snippet']['resourceId']['videoId'] for e in uploads]
df

df['views'] = df['id'].map(get_views)
def get_views(id):
  return youtube.videos().list(id = id, part = 'statistics').execute()['items'][0]['statistics']['viewCount']

df = df[::-1]

import matplotlib.pyplot as plt

fig, ax = plt.subplots()
ax.plot(df.index, df['views'])
ax.xaxis.set_major_locator(plt.MaxNLocator(5))
ax.yaxis.set_major_locator(plt.LinearLocator(numticks = 10))

chess_path = '/content/drive/My Drive/chess'
chess_df = pd.read_csv(chess_path+'/chess.csv', skiprows=1)
chess_df = chess_df.set_index(pd.to_datetime(chess_df['Week'])).drop('Week', axis = 1)
chess_df.plot()

chesscom_df = pd.read_csv(chess_path+'/chesscom.csv', skiprows=1)
chesscom_df = chesscom_df.set_index(pd.to_datetime(chesscom_df['Week'])).drop('Week', axis = 1)
chesscom_df.plot()

lichess_df = pd.read_csv(chess_path+'/lichess.csv', skiprows=1)
lichess_df = lichess_df.set_index(pd.to_datetime(lichess_df['Week'])).drop('Week', axis = 1)
lichess_df.plot()

